{"ast":null,"code":"import decode from 'jwt-decode';\nexport function getTokenExpirationDate(token) {\n  const decoded = decode(token);\n\n  if (!decoded.exp) {\n    return null;\n  }\n\n  const date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n\n  date.setUTCSeconds(decoded.exp);\n  return date;\n}\nexport function isTokenExpired(token) {\n  const date = getTokenExpirationDate(token);\n  const offsetSeconds = 0;\n\n  if (date === null) {\n    return false;\n  }\n\n  return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n}","map":{"version":3,"sources":["C:/Users/krasnova/Desktop/MFA-security/src/utils/jwtHelper.js"],"names":["decode","getTokenExpirationDate","token","decoded","exp","date","Date","setUTCSeconds","isTokenExpired","offsetSeconds","valueOf"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,YAAnB;AAEA,OAAO,SAASC,sBAAT,CAAgCC,KAAhC,EAAsC;AAC3C,QAAMC,OAAO,GAAGH,MAAM,CAACE,KAAD,CAAtB;;AACA,MAAG,CAACC,OAAO,CAACC,GAAZ,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAb,CAN2C,CAMlB;;AACzBD,EAAAA,IAAI,CAACE,aAAL,CAAmBJ,OAAO,CAACC,GAA3B;AACA,SAAOC,IAAP;AACD;AAED,OAAO,SAASG,cAAT,CAAwBN,KAAxB,EAA8B;AACnC,QAAMG,IAAI,GAAGJ,sBAAsB,CAACC,KAAD,CAAnC;AACA,QAAMO,aAAa,GAAG,CAAtB;;AACA,MAAIJ,IAAI,KAAK,IAAb,EAAmB;AACjB,WAAO,KAAP;AACD;;AACD,SAAO,EAAEA,IAAI,CAACK,OAAL,KAAkB,IAAIJ,IAAJ,GAAWI,OAAX,KAAwBD,aAAa,GAAG,IAA5D,CAAP;AACD","sourcesContent":["import decode from 'jwt-decode';\r\n\r\nexport function getTokenExpirationDate(token){\r\n  const decoded = decode(token)\r\n  if(!decoded.exp) {\r\n    return null\r\n  }\r\n\r\n  const date = new Date(0) // The 0 here is the key, which sets the date to the epoch\r\n  date.setUTCSeconds(decoded.exp)\r\n  return date\r\n}\r\n\r\nexport function isTokenExpired(token){\r\n  const date = getTokenExpirationDate(token)\r\n  const offsetSeconds = 0\r\n  if (date === null) {\r\n    return false\r\n  }\r\n  return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}